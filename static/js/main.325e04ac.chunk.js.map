{"version":3,"sources":["services/utilService.js","cmps/RecentSearches.jsx","cmps/AppFilter.jsx","cmps/MediaPlayer.jsx","cmps/TrackPreview.jsx","cmps/TrackList.jsx","cmps/LongTxt.jsx","cmps/TrackDetails.jsx","services/mediaService.js","pages/Home.jsx","cmps/AppHeader.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["utilService","getRandomInt","min","max","Math","ceil","floor","random","millisToMinsSecs","millis","mins","secs","toFixed","makeId","length","txt","possible","i","charAt","saveToStorage","key","val","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","removeFromStorage","removeItem","RecentSearches","recentSearches","handleChange","onClearSearches","className","map","searchItem","onClick","AppFilter","onSetFilter","useState","filterTxt","setFilterTxt","showRecents","toggleShowRecents","STORAGE_KEY","ev","target","value","onFilter","preventDefault","pop","unshift","onSubmit","onKeyPress","type","name","onChange","autoComplete","onFocus","onBlur","setTimeout","MediaPlayer","trackState","dockMode","onTogglePlay","onSwitchTrack","audioRef","useContext","PlayerContext","track","isPlaying","process","PUBLIC_URL","REACT_APP_CLIENT_ID","seekbarRef","useRef","seekbarInterval","trackExists","Object","keys","SVG_BASE_URL","useEffect","a","clearTimer","stopAudio","current","Audio","stream_url","play","onended","onTrackEnd","setInterval","currentTime","togglePlay","pause","clearInterval","ref","duration","alt","src","artwork_url","title","user","username","TrackPreview","onSelectTrack","gridView","HIGH_RES_ARTWORK_URL","replace","favoritings_count","TrackList","tracks","onNextPage","viewModeFromStorage","toggleGridView","onToggleGridView","isListView","id","LongTxt","desc","text","isLongTxtShown","toggleLongTextShown","substring","TrackDetails","volume","setVolume","currTimeLblRef","currTimeSecs","innerText","description","onInput","role","fill","height","width","aria-label","viewBox","d","step","avatar_url","href","rel","mediaService","query","nextPage","getById","CLIENT_ID","fetch","res","json","trackId","url","Home","trackDetailsRef","setTrackState","nextPageUrl","searchState","setSearchState","next_href","collection","status","isDirectionNext","trackIdx","findIndex","_track","scrollToTrackDetails","scrollIntoView","selectedTrack","AppHeader","navbar","setNavbar","changeBackground","window","scrollY","addEventListener","removeEventListener","to","location","reload","stroke","strokeWidth","strokeLinecap","strokeLinejoin","createContext","App","Provider","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","origin","headers","response","contentType","get","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.325e04ac.chunk.js","sourcesContent":["export const utilService = {\r\n    getRandomInt,\r\n    millisToMinsSecs,\r\n    makeId,\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    removeFromStorage\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min) + min) //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction millisToMinsSecs(millis) {\r\n    var mins = Math.floor(millis / 60000)\r\n    var secs = ((millis % 60000) / 1000).toFixed(0)\r\n    return (\r\n        secs === 60 ?\r\n            (mins + 1) + \":00\"\r\n            : mins + \":\" + (secs < 10 ? \"0\" : \"\") + secs\r\n    )\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    const str = JSON.stringify(val)\r\n    localStorage.setItem(key, str)\r\n}\r\nfunction loadFromStorage(key) {\r\n    const str = localStorage.getItem(key)\r\n    return JSON.parse(str)\r\n}\r\nfunction removeFromStorage(key) {\r\n    localStorage.removeItem(key)\r\n}","import { utilService } from '../services/utilService'\r\n\r\nexport const RecentSearches = ({ recentSearches, handleChange, onClearSearches }) => {\r\n\r\n    return <div className=\"recent-searches-container\">\r\n        <label>Recent Searches</label>\r\n        <div className=\"recent-searches flex wrap j-between\">\r\n            {recentSearches.map(searchItem => {\r\n                return <button className=\"btn-search-item\"\r\n                    key={utilService.makeId()} onClick={() => handleChange(null, searchItem)}>\r\n                    <span>{searchItem}</span>\r\n                </button>\r\n            })}\r\n            <button className=\"btn-clear\" onClick={onClearSearches}>CLEAR</button>\r\n        </div>\r\n    </div>\r\n}","import { useState } from \"react\"\r\nimport { RecentSearches } from \"./RecentSearches\"\r\nimport { utilService } from '../services/utilService'\r\n\r\nexport const AppFilter = ({ onSetFilter }) => {\r\n\r\n    const [filterTxt, setFilterTxt] = useState('')\r\n    const [showRecents, toggleShowRecents] = useState(false)\r\n    const STORAGE_KEY = 'SEARCHES'\r\n    let recentSearches = utilService.loadFromStorage(STORAGE_KEY) || []\r\n\r\n    const handleChange = (ev, txt) =>\r\n        setFilterTxt(txt || ev.target.value)\r\n\r\n    const handleStorage = () => {\r\n        if (recentSearches.length >= 5) recentSearches.pop()\r\n        recentSearches.unshift(filterTxt)\r\n        utilService.saveToStorage(STORAGE_KEY, recentSearches)\r\n    }\r\n\r\n    const onClearSearches = () => {\r\n        setFilterTxt('')\r\n        utilService.removeFromStorage(STORAGE_KEY)\r\n    }\r\n\r\n    const onFilter = ev => {\r\n        ev.preventDefault()\r\n        if (filterTxt) handleStorage()\r\n        onSetFilter(filterTxt)\r\n        toggleShowRecents(false)\r\n    }\r\n\r\n    return <form className=\"app-filter flex col a-center\" onSubmit={onFilter} onKeyPress={ev => ev.key === 'Enter' && onFilter(ev)}>\r\n        <input type=\"text\" name=\"filter-input\" value={filterTxt} onChange={handleChange} autoComplete=\"off\"\r\n            onFocus={() => toggleShowRecents(true)} onBlur={() => setTimeout(() => toggleShowRecents(false), 150)} />\r\n        {recentSearches.length && showRecents ? <RecentSearches recentSearches={recentSearches}\r\n            handleChange={handleChange} onClearSearches={onClearSearches} /> : null}\r\n        <button type=\"submit\" className={filterTxt ? '' : 'inactive'}>Find</button>\r\n    </form>\r\n}","import { useContext, useEffect, useRef } from \"react\"\r\nimport { PlayerContext } from '../App'\r\n\r\nexport const MediaPlayer = ({ trackState, dockMode, onTogglePlay, onSwitchTrack }) => {\r\n\r\n    const { audioRef } = useContext(PlayerContext)\r\n    const { track, isPlaying } = trackState\r\n    const { PUBLIC_URL, REACT_APP_CLIENT_ID } = process.env\r\n    const seekbarRef = useRef(null)\r\n    let seekbarInterval = null\r\n    const trackExists = track && Object.keys(track).length\r\n    const SVG_BASE_URL = `${PUBLIC_URL}/assets/imgs`\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            clearTimer()\r\n            trackExists && stopAudio()\r\n            audioRef.current = new Audio(`${track.stream_url}?consumer_key=${REACT_APP_CLIENT_ID}`)\r\n            trackExists && await audioRef.current.play()\r\n            audioRef.current.onended = () => onTrackEnd()\r\n            seekbarInterval = setInterval(() => {\r\n                seekbarRef.current.value = audioRef.current.currentTime * 1000\r\n            }, 100)\r\n        })()\r\n    }, [track.stream_url])\r\n\r\n    const togglePlay = () => {\r\n        isPlaying ? audioRef.current.pause() : audioRef.current.play()\r\n        trackExists && onTogglePlay(!trackState.isPlaying)\r\n    }\r\n\r\n    const stopAudio = () => {\r\n        audioRef.current.pause()\r\n        audioRef.current.currentTime = 0\r\n    }\r\n\r\n    const onTrackEnd = () => {\r\n        togglePlay()\r\n        onSwitchTrack(true)\r\n    }\r\n\r\n    const clearTimer = () => {\r\n        clearInterval(seekbarInterval)\r\n        seekbarInterval = null\r\n    }\r\n\r\n    return <article className={`media-player ${dockMode ? 'dock-mode' : ''}`}>\r\n        <div className=\"seekbar-container\">\r\n            <input type=\"range\" ref={seekbarRef} min={0} max={track.duration} />\r\n        </div>\r\n        <main className=\"main-layout flex j-between a-center\">\r\n            <div className=\"flex grow a-center\">\r\n                <img className=\"media-img\" alt=\"Media Artwork\"\r\n                    src={track.artwork_url || `${SVG_BASE_URL}/track-img-fallback.png`} />\r\n                {trackExists ? <div className=\"flex col\">\r\n                    <label>{track.title}</label>\r\n                    <small><span className=\"muted\">by&nbsp;</span>{track.user.username}</small>\r\n                </div> : null}\r\n            </div>\r\n            <div className=\"btns-container flex a-center\">\r\n                <button onClick={() => onSwitchTrack(false)}>\r\n                    <img src={`${SVG_BASE_URL}/btn-prev.png`} alt=\"Previous\" />\r\n                </button>\r\n                <button className={isPlaying ? 'btn-pause' : 'btn-play'} onClick={togglePlay}>\r\n                    <img src={`${SVG_BASE_URL}/${isPlaying ? 'btn-pause' : 'btn-play'}.png`} alt={isPlaying ? 'Pause' : 'Play'} />\r\n                </button>\r\n                <button onClick={() => onSwitchTrack(true)}>\r\n                    <img src={`${SVG_BASE_URL}/btn-next.png`} alt=\"Next\" />\r\n                </button>\r\n            </div>\r\n        </main>\r\n    </article>\r\n}","import { utilService } from '../services/utilService'\r\n\r\nexport const TrackPreview = ({ track, onSelectTrack, gridView }) => {\r\n\r\n    const SVG_BASE_URL = `${process.env.PUBLIC_URL}/assets/imgs`\r\n    const HIGH_RES_ARTWORK_URL = track?.artwork_url?.replace('-large.jpg', '-t300x300.jpg')\r\n\r\n    return <article className={`track-preview pointer ${gridView ? 'grid-view' : 'list-view'}`}\r\n        onClick={() => onSelectTrack(track)}>\r\n        <img src={HIGH_RES_ARTWORK_URL || `${SVG_BASE_URL}/track-img-fallback.png`} alt=\"\" />\r\n        <div className=\"flex col\">\r\n            <small>{track.user.username}</small>\r\n            <label>{track.title}</label>\r\n            <div className=\"flex a-self-end\">\r\n                <div className=\"flex a-center\">\r\n                    <img className=\"clock-img\" src={`${SVG_BASE_URL}/clock.png`} alt=\"\" />\r\n                    <span>{utilService.millisToMinsSecs(track.duration)}</span>\r\n                </div>\r\n                <div className=\"flex a-center\">\r\n                    <img className=\"fav-img\" src={`${SVG_BASE_URL}/favorite.png`} alt=\"\" />\r\n                    <span>{track.favoritings_count}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </article>\r\n}","import { useState } from 'react'\r\nimport { TrackPreview } from './TrackPreview'\r\nimport { utilService } from '../services/utilService'\r\n\r\nexport const TrackList = ({ tracks, onSelectTrack, onNextPage }) => {\r\n\r\n    const STORAGE_KEY = 'IS_GRID_MODE'\r\n    const SVG_BASE_URL = `${process.env.PUBLIC_URL}/assets/imgs`\r\n    const viewModeFromStorage = utilService.loadFromStorage(STORAGE_KEY)\r\n    const [gridView, toggleGridView] = useState(viewModeFromStorage || false)\r\n\r\n    const onToggleGridView = isListView => {\r\n        toggleGridView(isListView)\r\n        utilService.saveToStorage(STORAGE_KEY, isListView)\r\n    }\r\n\r\n    if (!tracks.length) return <div></div>\r\n    return <section className=\"track-list-container\">\r\n        <div className={`track-list ${gridView ? 'grid-view' : 'list-view'}`}>\r\n            {tracks.map(track => {\r\n                return <TrackPreview key={track.id} gridView={gridView}\r\n                    track={track} onSelectTrack={onSelectTrack} />\r\n            })}\r\n        </div>\r\n        <div className=\"btns-container flex grow\">\r\n            <button className=\"btn-grid\" onClick={() => onToggleGridView(true)}>\r\n                <img src={`${SVG_BASE_URL}/grid.svg`} alt=\"grid\" />\r\n            </button>\r\n            <span></span>\r\n            <button className=\"btn-list\" onClick={() => onToggleGridView(false)}>\r\n                <img src={`${SVG_BASE_URL}/list.svg`} alt=\"list\" />\r\n            </button>\r\n            <button className=\"btn-next\" onClick={onNextPage}>Next</button>\r\n        </div>\r\n    </section>\r\n}","import { useState } from \"react\"\r\n\r\nexport function LongTxt({ text }) {\r\n\r\n    let desc = ''\r\n    const [isLongTxtShown, toggleLongTextShown] = useState(false)\r\n    \r\n    desc = isLongTxtShown ? text : text.substring(0, 150)\r\n\r\n    return <div className={`fs14 ${desc.length >= 150 ? 'pointer' : ''}`}\r\n        onClick={() => toggleLongTextShown(!isLongTxtShown)}>\r\n        <p className=\"d-inline\">{desc}</p>\r\n        {desc.length >= 150 &&\r\n            <span className=\"clr1\">{isLongTxtShown ? ' ▲' : '... ▼'}</span>}\r\n    </div>\r\n}","import { LongTxt } from \"./LongTxt\"\r\nimport { utilService } from '../services/utilService'\r\nimport { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { PlayerContext } from '../App'\r\n\r\nexport const TrackDetails = ({ trackState, onTogglePlay, onSwitchTrack }) => {\r\n\r\n    const { track, isPlaying } = trackState\r\n    const { audioRef } = useContext(PlayerContext)\r\n    const seekbarRef = useRef(null)\r\n    const [volume, setVolume] = useState(audioRef.current.volume)\r\n    const currTimeLblRef = useRef(null)\r\n    let seekbarInterval = null\r\n    const trackExists = track && Object.keys(track).length\r\n    const SVG_BASE_URL = `${process.env.PUBLIC_URL}/assets/imgs`\r\n    const HIGH_RES_ARTWORK_URL = track?.artwork_url?.replace('-large.jpg', '-t500x500.jpg')\r\n\r\n    useEffect(() => {\r\n        seekbarInterval = setInterval(() => {\r\n            const currTimeSecs = audioRef.current.currentTime * 1000\r\n            seekbarRef.current.value = currTimeSecs\r\n            currTimeLblRef.current.innerText = utilService.millisToMinsSecs(currTimeSecs)\r\n        }, 100)\r\n        return () => {\r\n            clearInterval(seekbarInterval)\r\n            seekbarInterval = null\r\n        }\r\n    }, [])\r\n\r\n    const handleSeekbar = ev =>\r\n        audioRef.current.currentTime = ev.target.value / 1000\r\n\r\n    const handleVolumeBar = ev => {\r\n        audioRef.current.volume = ev.target.value\r\n        setVolume(+ev.target.value)\r\n    }\r\n\r\n    const togglePlay = () => {\r\n        isPlaying ? audioRef.current.pause() : audioRef.current.play()\r\n        trackExists && onTogglePlay(!trackState.isPlaying)\r\n    }\r\n\r\n    const volumeBarSvg = () => {\r\n        if (!volume) {\r\n            return <svg role=\"presentation\" fill=\"currentColor\" height=\"18\" width=\"18\" aria-label=\"Volume off\" id=\"volume-icon\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M0 5v6h2.804L8 14V2L2.804 5H0zm7-1.268v8.536L3.072 10H1V6h2.072L7 3.732zm8.623 2.121l-.707-.707-2.147\r\n                 2.147-2.146-2.147-.707.707L12.062 8l-2.146 2.146.707.707 2.146-2.147 2.147 2.147.707-.707L13.477 8l2.146-2.147z\"></path>\r\n            </svg>\r\n        }\r\n        else if (volume <= 0.5) {\r\n            return <svg role=\"presentation\" fill=\"currentColor\" height=\"18\" width=\"18\" aria-label=\"Volume medium\" id=\"volume-icon\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M0 11.032v-6h2.802l5.198-3v12l-5.198-3H0zm7 1.27v-8.54l-3.929 2.27H1v4h2.071L7\r\n                 12.302zm4.464-2.314q.401-.925.401-1.956 0-1.032-.4-1.957-.402-.924-1.124-1.623L11 3.69q.873.834\r\n                  1.369 1.957.496 1.123.496 2.385 0 1.262-.496 2.385-.496 1.123-1.369 1.956l-.659-.762q.722-.698 1.123-1.623z\"></path>\r\n            </svg>\r\n        }\r\n        else return <svg role=\"presentation\" fill=\"currentColor\" height=\"18\" width=\"18\" aria-label=\"Volume high\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M12.945 1.379l-.652.763c1.577 1.462 2.57 3.544 2.57 5.858s-.994 4.396-2.57 5.858l.651.763a8.966\r\n            8.966 0 00.001-13.242zm-2.272 2.66l-.651.763a4.484 4.484 0 01-.001 6.397l.651.763c1.04-1 1.691-2.404\r\n            1.691-3.961s-.65-2.962-1.69-3.962zM0 5v6h2.804L8 14V2L2.804 5H0zm7-1.268v8.536L3.072 10H1V6h2.072L7 3.732z\"></path>\r\n        </svg>\r\n    }\r\n\r\n    return <section className=\"track-details flex col\">\r\n        <main className=\"flex col\">\r\n            <div className=\"track-panel flex\">\r\n                <img src={HIGH_RES_ARTWORK_URL || `${SVG_BASE_URL}/track-img-fallback.png`} alt=\"Media Artwork\" />\r\n                <div className=\"flex col\">\r\n                    <header className=\"flex col\">\r\n                        <label>{track.title}</label>\r\n                    </header>\r\n                    <main className=\"grow\">\r\n                        {track.description ? <LongTxt text={track.description} />\r\n                            : <span className=\"muted\">No description given...</span>}\r\n                    </main>\r\n                    <footer className=\"flex j-between a-center\">\r\n                        <div className=\"track-info-container flex a-center\">\r\n                            <div className=\"flex a-center\">\r\n                                <img className=\"clock-img\" src={`${SVG_BASE_URL}/clock.png`} alt=\"\" />\r\n                                <span>{utilService.millisToMinsSecs(track.duration)}</span>\r\n                            </div>\r\n                            <div className=\"flex a-center\">\r\n                                <img className=\"fav-img\" src={`${SVG_BASE_URL}/favorite.png`} alt=\"\" />\r\n                                <span>{track.favoritings_count}</span>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n            <div className=\"play-container flex j-between a-center\">\r\n                <div className=\"btns-container flex a-center\">\r\n                    <button onClick={() => onSwitchTrack(false)}>\r\n                        <img src={`${SVG_BASE_URL}/btn-prev.png`} alt=\"Previous\" />\r\n                    </button>\r\n                    <button className={isPlaying ? 'btn-pause' : 'btn-play'} onClick={togglePlay}>\r\n                        <img src={`${SVG_BASE_URL}/${isPlaying ? 'btn-pause' : 'btn-play'}.png`} alt={isPlaying ? 'Pause' : 'Play'} />\r\n                    </button>\r\n                    <button onClick={() => onSwitchTrack(true)}>\r\n                        <img src={`${SVG_BASE_URL}/btn-next.png`} alt=\"Next\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"seekbar-container flex a-center\">\r\n                    <label ref={currTimeLblRef}>0:00</label>\r\n                    <input type=\"range\" ref={seekbarRef} min={0} max={track.duration} onInput={handleSeekbar} />\r\n                    <label>{utilService.millisToMinsSecs(track.duration)}</label>\r\n                </div>\r\n                <div className=\"volume-bar-container flex a-center\">\r\n                    {volumeBarSvg()}\r\n                    <input type=\"range\" value={audioRef.current.volume} min={0} max={1} step={0.1} onInput={handleVolumeBar} />\r\n                </div>\r\n            </div>\r\n        </main>\r\n\r\n        <div className=\"artist-panel flex col\">\r\n            <h4>Artist</h4>\r\n            <div className=\"flex\">\r\n                <img src={track.user.avatar_url} alt=\"User Artwork\" />\r\n                <div className=\"flex col\">\r\n                    <small className=\"grow\">{track.user.username}</small>\r\n                    <a href=\"https://soundcloud.com/octobersveryown\" target=\"_blank\" rel=\"noreferrer\">\r\n                        <button>Visit</button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section >\r\n}","export const mediaService = {\r\n  query,\r\n  nextPage,\r\n  getById\r\n}\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\n\r\nasync function query(filterTxt = '') {\r\n  const res = await fetch(\r\n    `https://api.soundcloud.com/tracks?format=json&linked_partitioning=1\r\n    &client_id=${CLIENT_ID}&q=${filterTxt}&limit=6`)\r\n  return res.json()\r\n}\r\n\r\nasync function getById(trackId) {\r\n  const res = await fetch(\r\n    `http://api.soundcloud.com/tracks/${trackId}.json?client_id=${CLIENT_ID}`)\r\n  return res.json()\r\n}\r\n\r\nasync function nextPage(url) {\r\n  const res = await fetch(url)\r\n  return res.json()\r\n}","import { useEffect, useRef, useState } from \"react\"\r\nimport { AppFilter } from \"../cmps/AppFilter\"\r\nimport { MediaPlayer } from \"../cmps/MediaPlayer\"\r\nimport { TrackList } from \"../cmps/TrackList\"\r\nimport { TrackDetails } from \"../cmps/TrackDetails\"\r\nimport { mediaService } from '../services/mediaService'\r\n\r\nexport const Home = () => {\r\n\r\n    const trackDetailsRef = useRef(null)\r\n    const [trackState, setTrackState] = useState({\r\n        isPlaying: false,\r\n        track: {}\r\n    })\r\n    const [searchState, setSearchState] = useState({\r\n        query: '',\r\n        nextPageUrl: '',\r\n        tracks: []\r\n    })\r\n    const { track } = trackState\r\n    const trackExists = track && Object.keys(track).length\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const query = await mediaService.query('mob')\r\n            setSearchState({\r\n                ...searchState,\r\n                nextPageUrl: query.next_href,\r\n                tracks: query.collection\r\n            })\r\n        })()\r\n    }, [])\r\n\r\n    const onSetFilter = async filterTxt => {\r\n        const query = await mediaService.query(filterTxt)\r\n        setSearchState({\r\n            query: filterTxt,\r\n            nextPageUrl: query.next_href,\r\n            tracks: filterTxt ? query.collection : searchState.tracks\r\n        })\r\n    }\r\n\r\n    const onSelectTrack = selectedTrack => {\r\n        setTrackState({\r\n            isPlaying: true,\r\n            track: selectedTrack\r\n        })\r\n        scrollToTrackDetails()\r\n    }\r\n\r\n    const onTogglePlay = status => {\r\n        setTrackState({\r\n            ...trackState,\r\n            isPlaying: status\r\n        })\r\n    }\r\n\r\n    const onNextPage = async () => {\r\n        const query = await mediaService.nextPage(searchState.nextPageUrl)\r\n        setSearchState({\r\n            ...searchState,\r\n            nextPageUrl: query.next_href,\r\n            tracks: query.collection\r\n        })\r\n    }\r\n\r\n    const onSwitchTrack = isDirectionNext => {\r\n        const { tracks } = searchState\r\n        const trackIdx = tracks.findIndex(_track => _track.id === track.id)\r\n        setTrackState({\r\n            ...trackState,\r\n            track: isDirectionNext ?\r\n                trackIdx === tracks.length - 1 ? tracks[trackIdx] : tracks[trackIdx + 1]\r\n                : trackIdx - 1 < 0 ? tracks[0] : tracks[trackIdx - 1]\r\n        })\r\n    }\r\n\r\n    const scrollToTrackDetails = () =>\r\n        trackDetailsRef.current.scrollIntoView()\r\n\r\n    return <section className=\"home\">\r\n        <nav className=\"result-bar\">\r\n            <div className=\"main-layout flex col\">\r\n                <small>{searchState.query ? 'Search Results /' : 'Spotlight'}</small>\r\n                <label>{searchState.query ? searchState.query : 'Featured Tracks'}</label>\r\n            </div>\r\n        </nav>\r\n        <div className=\"main-layout pos-relative\">\r\n            <div ref={trackDetailsRef}>\r\n                <AppFilter onSetFilter={onSetFilter} />\r\n            </div>\r\n            {trackExists ? <TrackDetails trackState={trackState} onTogglePlay={onTogglePlay} onSwitchTrack={onSwitchTrack} /> : null}\r\n            <TrackList tracks={searchState.tracks} onSelectTrack={onSelectTrack} onNextPage={onNextPage} />\r\n        </div>\r\n        <div className=\"media-player-container\" onClick={trackExists && scrollToTrackDetails}>\r\n            <MediaPlayer trackState={trackState} onTogglePlay={onTogglePlay} onSwitchTrack={onSwitchTrack} />\r\n        </div>\r\n    </section>\r\n}","import { useEffect, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const AppHeader = () => {\r\n\r\n    const [navbar, setNavbar] = useState(false)\r\n    const changeBackground = () =>\r\n        window.scrollY >= 40 ? setNavbar(true) : setNavbar(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeBackground)\r\n        return () =>\r\n            window.removeEventListener('scroll', changeBackground)\r\n    }, [])\r\n\r\n    return <header className={navbar ? \"app-header active\" : \"app-header\"}>\r\n        <section className=\"main-layout flex j-between a-center\">\r\n            <NavLink to=\"/\" className=\"logo flex a-center\" onClick={() => window.location.reload()}>\r\n                <img src={`${process.env.PUBLIC_URL}/favicon.png`} alt=\"\" />\r\n                <span>LOUDER</span>\r\n            </NavLink>\r\n            <nav className=\"flex a-center\">\r\n                <a href=\"https://github.com/tomleb3/louder\">\r\n                    <svg stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\" className=\"github-link\" height=\"1.5em\" width=\"1.5em\">\r\n                        <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35\r\n                         6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65\r\n                          16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44\r\n                           5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\r\n                    </svg>\r\n                </a>\r\n            </nav>\r\n        </section>\r\n    </header>\r\n}","import { Route } from 'react-router-dom'\nimport { Home } from './pages/Home.jsx'\nimport { AppHeader } from './cmps/AppHeader.jsx'\nimport { createContext, useRef } from 'react'\n\nexport const PlayerContext = createContext(null)\n\nexport function App() {\n\n  const audioRef = useRef(null)\n\n  return (\n    <main className=\"App\">\n      <PlayerContext.Provider value={{ audioRef }}>\n        <AppHeader />\n        <Route path=\"/\" exact component={Home} />\n      </PlayerContext.Provider>\n    </main>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport './styles/global.scss'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}