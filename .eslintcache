[{"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\index.js":"1","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\App.js":"3","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\reportWebVitals.js":"4","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\pages\\Home.jsx":"5","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\AppHeader.jsx":"6","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\services\\mediaService.js":"7","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\MediaPlayer.jsx":"8","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\AppFilter.jsx":"9","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\TrackDetails.jsx":"10","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\TrackList.jsx":"11","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\services\\utilService.js":"12","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\RecentSearches.jsx":"13","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\LongTxt.jsx":"14","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\TrackPreview.jsx":"15"},{"size":913,"mtime":1620675124098,"results":"16","hashOfConfig":"17"},{"size":5064,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":313,"mtime":1620675465195,"results":"19","hashOfConfig":"17"},{"size":364,"mtime":499162500000,"results":"20","hashOfConfig":"17"},{"size":3220,"mtime":1620675102227,"results":"21","hashOfConfig":"17"},{"size":1560,"mtime":1620828766183,"results":"22","hashOfConfig":"17"},{"size":600,"mtime":1620662389407,"results":"23","hashOfConfig":"17"},{"size":2251,"mtime":1620675384114,"results":"24","hashOfConfig":"17"},{"size":1606,"mtime":1620712160401,"results":"25","hashOfConfig":"17"},{"size":2120,"mtime":1620713739682,"results":"26","hashOfConfig":"17"},{"size":1517,"mtime":1620667619700,"results":"27","hashOfConfig":"17"},{"size":1130,"mtime":1620642148721,"results":"28","hashOfConfig":"17"},{"size":715,"mtime":1620711885841,"results":"29","hashOfConfig":"17"},{"size":551,"mtime":1620638955176,"results":"30","hashOfConfig":"17"},{"size":1126,"mtime":1620675390197,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10cclan",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\index.js",[],["65","66"],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\App.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\reportWebVitals.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\pages\\Home.jsx",["67"],"import { useEffect, useRef, useState } from \"react\"\r\nimport { AppFilter } from \"../cmps/AppFilter\"\r\nimport { MediaPlayer } from \"../cmps/MediaPlayer\"\r\nimport { TrackList } from \"../cmps/TrackList\"\r\nimport { TrackDetails } from \"../cmps/TrackDetails\"\r\nimport { mediaService } from '../services/mediaService'\r\n\r\nexport const Home = () => {\r\n\r\n    const trackDetailsRef = useRef(null)\r\n    const [trackState, setTrackState] = useState({\r\n        isPlaying: false,\r\n        track: {}\r\n    })\r\n    const [searchState, setSearchState] = useState({\r\n        query: '',\r\n        nextPageUrl: '',\r\n        tracks: []\r\n    })\r\n    const { track } = trackState\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const query = await mediaService.query('mob')\r\n            setSearchState({\r\n                ...searchState,\r\n                nextPageUrl: query.next_href,\r\n                tracks: query.collection\r\n            })\r\n        })()\r\n    }, [])\r\n\r\n    const onSetFilter = async filterTxt => {\r\n        const query = await mediaService.query(filterTxt)\r\n        setSearchState({\r\n            query: filterTxt,\r\n            nextPageUrl: query.next_href,\r\n            tracks: filterTxt ? query.collection : searchState.tracks\r\n        })\r\n    }\r\n\r\n    const onSelectTrack = selectedTrack => {\r\n        setTrackState({\r\n            ...trackState,\r\n            track: selectedTrack\r\n        })\r\n        trackDetailsRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    const onTogglePlay = status => {\r\n        setTrackState({\r\n            ...trackState,\r\n            isPlaying: status\r\n        })\r\n    }\r\n\r\n    const onNextPage = async () => {\r\n        const query = await mediaService.nextPage(searchState.nextPageUrl)\r\n        setSearchState({\r\n            ...searchState,\r\n            nextPageUrl: query.next_href,\r\n            tracks: query.collection\r\n        })\r\n    }\r\n\r\n    const onSwitchTrack = direction => {\r\n        const { tracks } = searchState\r\n        const trackIdx = tracks.findIndex(_track => _track.id === track.id)\r\n        setTrackState({\r\n            ...trackState,\r\n            track: direction === 'next' ?\r\n                trackIdx === tracks.length - 1 ? tracks[trackIdx] : tracks[trackIdx + 1]\r\n                : trackIdx - 1 < 0 ? tracks[0] : tracks[trackIdx - 1]\r\n        })\r\n    }\r\n\r\n    return <section className=\"home\">\r\n        <nav className=\"result-bar\">\r\n            <div className=\"main-layout flex col\">\r\n                <small>{searchState.query ? 'Search Results /' : 'Spotlight'}</small>\r\n                <label>{searchState.query ? searchState.query : 'Featured Tracks'}</label>\r\n            </div>\r\n        </nav>\r\n        <div className=\"main-layout pos-relative\">\r\n            <div ref={trackDetailsRef}>\r\n                <AppFilter onSetFilter={onSetFilter} />\r\n            </div>\r\n            {track && Object.keys(track).length ? <TrackDetails trackState={trackState} onTogglePlay={onTogglePlay} /> : null}\r\n            <TrackList tracks={searchState.tracks} onSelectTrack={onSelectTrack} onNextPage={onNextPage} />\r\n        </div>\r\n        <MediaPlayer trackState={trackState} onTogglePlay={onTogglePlay} onSwitchTrack={onSwitchTrack} />\r\n    </section>\r\n}","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\services\\mediaService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\MediaPlayer.jsx",["68"],"import { useEffect, useRef } from \"react\"\r\n\r\nexport const MediaPlayer = ({ trackState, dockMode, onTogglePlay, onSwitchTrack }) => {\r\n\r\n    const { track, isPlaying } = trackState\r\n    const { PUBLIC_URL, REACT_APP_CLIENT_ID } = process.env\r\n    const svgBaseUrl = `${PUBLIC_URL}/assets/imgs`\r\n    let audioUrl = useRef()\r\n    const trackExists = track && Object.keys(track).length\r\n\r\n    useEffect(() => {\r\n        (async () => trackState.isPlaying && await audioUrl.current.play())()\r\n    })\r\n\r\n    useEffect(() => {\r\n        onTogglePlay(false)\r\n        trackExists && onStopAudio()\r\n        audioUrl.current = new Audio(`${track.stream_url}?consumer_key=${REACT_APP_CLIENT_ID}`)\r\n    }, [track.stream_url])\r\n\r\n\r\n    const togglePlay = () => {\r\n        isPlaying ? audioUrl.current.pause() : audioUrl.current.play()\r\n        trackExists && onTogglePlay(!trackState.isPlaying)\r\n    }\r\n\r\n    const onStopAudio = () => {\r\n        audioUrl.current.pause()\r\n        audioUrl.current.currentTime = 0\r\n    }\r\n\r\n    return <article className={`media-player ${dockMode ? 'dock-mode' : ''}`}>\r\n        <div className=\"main-layout flex j-between a-center\">\r\n            <div className=\"flex grow a-center\">\r\n                <img className=\"media-img\" alt=\"\"\r\n                    src={track.artwork_url || `${svgBaseUrl}/track-img-fallback.png`} />\r\n                {trackExists ? <div className=\"flex col\">\r\n                    <label>{track.title}</label>\r\n                    <small><span className=\"muted\">by&nbsp;</span>{track.user.username}</small>\r\n                </div> : null}\r\n            </div>\r\n            <div className=\"btn-container flex\">\r\n                <button onClick={() => onSwitchTrack('prev')}>\r\n                    <img src={`${svgBaseUrl}/btn-prev.png`} alt=\"\" />\r\n                </button>\r\n                <button className={isPlaying ? 'btn-pause' : 'btn-play'} onClick={togglePlay}>\r\n                    <img src={`${svgBaseUrl}/${isPlaying ? 'btn-pause' : 'btn-play'}.png`} alt=\"\" />\r\n                </button>\r\n                <button onClick={() => onSwitchTrack('next')}>\r\n                    <img src={`${svgBaseUrl}/btn-next.png`} alt=\"\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </article>\r\n}","C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\AppFilter.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\TrackDetails.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\TrackList.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\services\\utilService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\RecentSearches.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\LongTxt.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Louder\\src\\cmps\\TrackPreview.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":31,"column":8,"nodeType":"75","endLine":31,"endColumn":10,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":19,"column":8,"nodeType":"75","endLine":19,"endColumn":26,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchState'. Either include it or remove the dependency array. You can also do a functional update 'setSearchState(s => ...)' if you only need 'searchState' in the 'setSearchState' call.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'REACT_APP_CLIENT_ID', 'onTogglePlay', and 'trackExists'. Either include them or remove the dependency array. If 'onTogglePlay' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [searchState]",{"range":"87","text":"88"},"Update the dependencies array to be: [REACT_APP_CLIENT_ID, onTogglePlay, track.stream_url, trackExists]",{"range":"89","text":"90"},[948,950],"[searchState]",[691,709],"[REACT_APP_CLIENT_ID, onTogglePlay, track.stream_url, trackExists]"]